<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- Spring 工具类配置 -->
	<bean id="springUtils" class="com.halo.spring.utils.SpringUtils" />
	<!-- XML读写模板类配置 -->
	<bean id="xmlTemplate" class="com.halo.wechat.xml.utils.DomTemplate" />
	<!-- 消息访问对象配置 -->
	<bean id="msgTypeSao" class="com.halo.wechat.saos.impls.MsgTypeSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="text" class="com.halo.wechat.saos.impls.TextMessageSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="image" class="com.halo.wechat.saos.impls.ImageMessageSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="voice" class="com.halo.wechat.saos.impls.VoiceMessageSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="video" class="com.halo.wechat.saos.impls.VideoMessageSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="shortvideo" class="com.halo.wechat.saos.impls.ShortVideoMessageSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="location" class="com.halo.wechat.saos.impls.LocationMessageSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="link" class="com.halo.wechat.saos.impls.LinkMessageSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="news" class="com.halo.wechat.saos.impls.NewsMessageSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="event" class="com.halo.wechat.saos.impls.EventSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="subscribe_event" class="com.halo.wechat.saos.impls.SubscribeEventSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="unsubscribe_event" class="com.halo.wechat.saos.impls.UnsubscribeEventSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="scan_event" class="com.halo.wechat.saos.impls.ScanEventSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="location_event" class="com.halo.wechat.saos.impls.LocationEventSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="click_event" class="com.halo.wechat.saos.impls.ClickEventSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<bean id="view_event" class="com.halo.wechat.saos.impls.ViewEventSaoImpl">
		<property name="xmlTemplate" ref="xmlTemplate" />
	</bean>
	<!-- 微信能力接口类配置 -->
	<bean id="httpTemplate" class="com.halo.http.utils.HttpClientTemplate"
		scope="prototype" />
	<bean id="accessAbility" class="com.halo.wechat.capabilities.AccessCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="customMenuAbility" class="com.halo.wechat.capabilities.CustomMenuCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="signatureAbility" class="com.halo.wechat.capabilities.SignatureCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="messageAbility" class="com.halo.wechat.capabilities.MessageCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="securityAbility" class="com.halo.wechat.capabilities.SecurityCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="qrcodeAbility" class="com.halo.wechat.capabilities.QrcodeCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="materialAbility" class="com.halo.wechat.capabilities.MaterialCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="userManagementAbility" class="com.halo.wechat.capabilities.UserManagementCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="userAnalysisAbility" class="com.halo.wechat.capabilities.UserAnalysisCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="articleAnalysisAbility" class="com.halo.wechat.capabilities.ArticleAnalysisCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<bean id="upStreamMsgAnalysisAbility"
		class="com.halo.wechat.capabilities.UpStreamMsgAnalysisCapability">
		<property name="httpTemplate" ref="httpTemplate" />
	</bean>
	<!-- 日志配置 -->
	<bean id="appLogger" class="com.halo.wechat.logger.AppLogger" />
	<aop:config>
		<aop:aspect ref="appLogger">
			<!-- 执行sao方法的切点 -->
			<aop:pointcut id="saoMethod"
				expression="execution(* com.halo.wechat.saos.XmlSao.*(..)) and args(..)" />
			<aop:before pointcut-ref="saoMethod" method="beforeMethod" />
			<aop:after pointcut-ref="saoMethod" method="afterMethod" />
			<!-- 工具类方法切点 -->
			<aop:pointcut id="domTemplateGet"
				expression="execution(* com.halo.wechat.xml.utils.DomTemplate.get(..))" />
			<aop:before pointcut-ref="domTemplateGet" method="logBeforeDomTemplateGet" />
			<aop:after pointcut-ref="domTemplateGet" method="afterMethod" />
			<aop:pointcut id="springUtilsMethod"
				expression="execution(* com.halo.spring.utils.*.*(..)) and args(..)" />
			<aop:before pointcut-ref="springUtilsMethod" method="beforeMethod" />
			<aop:after pointcut-ref="springUtilsMethod" method="afterMethod" />
			<aop:pointcut id="httpUtilsMethod"
				expression="execution(* com.halo.http.utils.*.*(..)) and args(..)" />
			<aop:before pointcut-ref="httpUtilsMethod" method="beforeMethod" />
			<aop:after pointcut-ref="httpUtilsMethod" method="afterMethod" />
			<!-- SpringUtils工具类的loadWebApplicationContext方法异常捕获切点 -->
			<aop:pointcut id="loadWebApplicationContext"
				expression="execution(* com.halo.spring.utils.SpringUtils.loadWebApplicationContext(..))" />
			<aop:after-throwing pointcut-ref="loadWebApplicationContext"
				method="afterThrowing" throwing="e" />
			<!-- 微信能力接口类方法切点 -->
			<aop:pointcut id="abilityMethod"
				expression="execution(* com.halo.wechat.capabilities.abilities.*.*(..)) and args(..)" />
			<aop:before pointcut-ref="abilityMethod" method="beforeMethod" />
			<aop:after pointcut-ref="abilityMethod" method="afterMethod" />
			<aop:pointcut id="signatureEncode"
				expression="execution(* com.halo.wechat.capabilities.SignatureCapability.encodeParameters(..))" />
			<aop:before pointcut-ref="signatureEncode" method="logBeforeSignatureEncode" />
			<aop:pointcut id="signatureCompare"
				expression="execution(* com.halo.wechat.capabilities.SignatureCapability.compareSignature(..))" />
			<aop:before pointcut-ref="signatureCompare" method="logBeforeSignatureCompare" />
		</aop:aspect>
		<aop:aspect ref="securityAbility">
			<aop:pointcut id="responseMessage"
				expression="execution(* com.halo.wechat.capabilities.MessageCapability.responseMessage(..)) and args(..)" />
			<aop:before pointcut-ref="responseMessage" method="messageSecurityCheck" />
		</aop:aspect>
	</aop:config>
</beans>